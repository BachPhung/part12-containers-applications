version: '3.8'

services:
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: myapp-reverse-proxy
    depends_on:
      - web
      - server
  web:
    image: myapp-front-dev
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - 3000:3000
    container_name: myapp-front-dev
  server:
    image: myapp-back-dev
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./backend:/usr/src/app
    ports:
      - 3005:3005
    depends_on:
      - mongo
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    container_name: myapp-back-dev
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db
  redis:
    image: redis
    restart: always
    command: [ 'redis-server', '--appendonly', 'yes' ]
    volumes:
      # Declare the volume
      - ./backend/redis_data:/data
volumes:
  mongo_data:
